{"_subscriptionAction":{"name":"_subscriptionAction","description":"Apply a given action on a given set, against a given channel with the given subscription."},"_subscriptionsAction":{"name":"_subscriptionsAction","description":"Perform a give action on all on the channels supplied using the subscription value supplied.  This is basically, a\nway of performing the same action on a sets (eg. add or delete)."},"_allChannelsAreCorrectType":{"name":"_allChannelsAreCorrectType","description":"Test an array of channels returning true if all channels are correct type and format.  Returns false if any of the\nchannels fail the criteria."},"_allAncestorChannels":{"name":"_allAncestorChannels","description":"Generator for all ancestor channels of a given array of channels."},"_uniqueChannels":{"name":"_uniqueChannels","description":"Get an array of unique ancestor channels from array of channels."},"_removingTrailingSlash":{"name":"_removingTrailingSlash","description":"Take a channel string and trim any trailing slashes or empty channel parts."},"_subscribe":{"name":"_subscribe","description":"Subscribe to the given channels with the supplied listener and filter. Will use the supplied listener lookup map to\nset listeners."},"_publish":{"name":"_publish","description":"Publish a message to the given listeners on the given channels."},"_broadcast":{"name":"_broadcast","description":"Broadcast a message to the given listeners on the given channels."},"Event":{"name":"Event","description":"Event class, this is the class that is passed to listeners, it contains all the given data and other event style\ninformation that might be useful.  Each listener get's it's own instance of the class."},"Event#data":{"name":"data","description":"The message data."},"Event#target":{"name":"target","description":"The original channel this was published/broadcast to."},"PubSub":{"name":"PubSub","description":"Publish and Subscription class."},"PubSub#subscribe":{"name":"subscribe","description":"Subscribe to information published on a given channel(s) path with optional filtering. If a regular-expression is\ngiven for a channel it will receive published data but not broadcast data."},"PubSub#publish":{"name":"publish","description":"Publish a message to the given channel(s). Publishing causes a message to be read on given channel and all\nparent channels."},"PubSub#broadcast":{"name":"broadcast","description":"Broadcast a message to the given channel(s). Broadcasting causes a message to be read on given channel and all\ndescendant channels. Will not be read on channel subscriptions that are regular-expressions."},"package:undefined":{}}