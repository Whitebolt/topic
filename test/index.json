{"Event()":{"longname":"Event","name":"Event","kind":"constructor","description":"Create a new event instance.","memberof":"Event","params":[{"type":{"names":["*"]},"description":"The message being published/broadcast.","name":"message"},{"type":{"names":["Array.<string>"]},"description":"The target channels being published/broadcast to.","name":"target"}],"order":10},"Event":{"longname":"Event","name":"Event","scope":"global","kind":"class","description":"Event class, this is the class that is passed to listeners, it contains all the given data and other event style information that might be useful. Each listener get's it's own instance of the class.","meta":{"lineno":205,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":9},"PubSub":{"longname":"PubSub","name":"PubSub","scope":"global","kind":"class","description":"Publish and Subscription class.","access":"public","meta":{"lineno":248,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":13},"_subscriptionAction":{"longname":"_subscriptionAction","name":"_subscriptionAction","scope":"global","kind":"function","description":"Apply a given action on a given set, against a given channel with the given subscription.","params":[{"type":{"names":["Set"]},"description":"The subscriptions to work on.","name":"subscriptions"},{"type":{"names":["string"]},"description":"The channel to apply this with.","name":"channel"},{"type":{"names":["string"]},"description":"The action to do.","name":"action"},{"type":{"names":["object"]},"description":"The subscription object to apply.","name":"subscription"}],"meta":{"lineno":24,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":0},"_subscriptionsAction":{"longname":"_subscriptionsAction","name":"_subscriptionsAction","scope":"global","kind":"function","description":"Perform a give action on all on the channels supplied using the subscription value supplied. This is basically, a way of performing the same action on a sets (eg. add or delete).","params":[{"type":{"names":["Set"]},"description":"The subscriptions to work on.","name":"subscriptions"},{"type":{"names":["Array.<(string|RegExp)>"]},"description":"The channels to apply this with.","name":"channels"},{"type":{"names":["string"]},"description":"The action to do.","name":"action"},{"type":{"names":["object"]},"description":"The subscription object to apply.","name":"subscription"}],"access":"private","meta":{"lineno":39,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":1},"_allChannelsAreCorrectType":{"longname":"_allChannelsAreCorrectType","name":"_allChannelsAreCorrectType","scope":"global","kind":"function","description":"Test an array of channels returning true if all channels are correct type and format. Returns false if any of the channels fail the criteria.","params":[{"type":{"names":["Array.<(string|RegExp)>"]},"description":"Channels to test.","name":"channels"},{"type":{"names":["boolean"]},"description":"Do we allow regular expressions for channels?","name":"allowRegExp","defaultvalue":true}],"returns":[{"type":{"names":["boolean"]},"description":"Did they all pass?"}],"access":"private","meta":{"lineno":52,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":2},"allAncestorChannels":{"longname":"allAncestorChannels","name":"allAncestorChannels","scope":"global","kind":"function","description":"Generator for all ancestor channels of a given array of channels.","params":[{"type":{"names":["Array.<string>"]},"description":"Channels to expand.","name":"channels"}],"meta":{"lineno":63,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":3},"_uniqueChannels":{"longname":"_uniqueChannels","name":"_uniqueChannels","scope":"global","kind":"function","description":"Get an array of unique ancestor channels from array of channels.","params":[{"type":{"names":["Array.<string>"]},"description":"Channels array.","name":"channels"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"All calculated channels."}],"access":"private","meta":{"lineno":87,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":4},"_removingTrailingSlash":{"longname":"_removingTrailingSlash","name":"_removingTrailingSlash","scope":"global","kind":"function","description":"Take a channel string and trim any trailing slashes or empty channel parts.","params":[{"type":{"names":["sgtring"]},"description":"Thr channel to trim.","name":"channel"}],"returns":[{"type":{"names":["string"]},"description":"The trimmed channel."}],"access":"private","meta":{"lineno":103,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":5},"_subscribe":{"longname":"_subscribe","name":"_subscribe","scope":"global","kind":"function","description":"Subscribe to the given channels with the supplied listener and filter. Will use the supplied listener lookup map to set listeners.","params":[{"type":{"names":["Map"]},"description":"The listener lookup map.","name":"listenerLookup"},{"type":{"names":["Array.<(string|RegExp)>","Set.<(string|RegExp)>"]},"description":"The channels to subscribe to.","name":"channels"},{"type":{"names":["Object"]},"description":"The sift filter to use.","name":"filter"},{"type":{"names":["function"]},"description":"The listener to fire when messages received.","name":"listener"}],"returns":[{"type":{"names":["function"]},"description":"Unsubscribe function."}],"access":"private","meta":{"lineno":122,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":6},"_publish":{"longname":"_publish","name":"_publish","scope":"global","kind":"function","description":"Publish a message to the given listeners on the given channels.","params":[{"type":{"names":["Map"]},"description":"The listener lookup to use.","name":"listenerLookup"},{"type":{"names":["Array.<string>"]},"description":"The channels to publish on.","name":"channels"},{"type":{"names":["*"]},"description":"The publish message.","name":"message"}],"returns":[{"type":{"names":["boolean"]},"description":"Did any listeners receive the message."}],"meta":{"lineno":140,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":7},"_broadcast":{"longname":"_broadcast","name":"_broadcast","scope":"global","kind":"function","description":"Broadcast a message to the given listeners on the given channels.","params":[{"type":{"names":["Map"]},"description":"The listener lookup to use.","name":"listenerLookup"},{"type":{"names":["Array.<string>"]},"description":"The channels to broadcast on.","name":"channels"},{"type":{"names":["*"]},"description":"The broadcast message.","name":"message"}],"returns":[{"type":{"names":["boolean"]},"description":"Did any listeners receive the message."}],"meta":{"lineno":177,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":8},"Event#data":{"longname":"Event#data","name":"data","scope":"instance","kind":"member","description":"The message data.","memberof":"Event","params":[],"returns":[{"type":{"names":["*"]}}],"properties":[{"type":{"names":["*"]},"name":"{}"}],"access":"public","meta":{"lineno":225,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":11},"Event#target":{"longname":"Event#target","name":"target","scope":"instance","kind":"member","description":"The original channel this was published/broadcast to.","memberof":"Event","params":[],"returns":[{"type":{"names":["string"]}}],"properties":[{"type":{"names":["Array"]},"name":"]"}],"access":"public","meta":{"lineno":236,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":12},"PubSub#subscribe":{"longname":"PubSub#subscribe","name":"subscribe","scope":"instance","kind":"function","description":"Subscribe to information published on a given channel(s) path with optional filtering. If a regular-expression is given for a channel it will receive published data but not broadcast data.","memberof":"PubSub","params":[{"type":{"names":["string","RegExp","Array.<(string|RegExp)>","Set.<(string|RegExp)>"]},"description":"Channel(s) to subscribe to (including glob-style patterns).","name":"channel"},{"type":{"names":["Object"]},"optional":true,"description":"Filter to filter-out messages that are not wanted.","name":"filter"},{"type":{"names":["function"]},"description":"Listener for caught messages.","name":"listener"}],"returns":[{"type":{"names":["function"]},"description":"Unsubscribe function."}],"access":"public","meta":{"lineno":266,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":14},"PubSub#publish":{"longname":"PubSub#publish","name":"publish","scope":"instance","kind":"function","description":"Publish a message to the given channel(s). Publishing causes a message to be read on given channel and all parent channels.","memberof":"PubSub","params":[{"type":{"names":["string","Array","set"]},"description":"Channel(s) to publish on (including glob-style patterns).","name":"channel"},{"type":{"names":["*"]},"description":"Message to publish.","name":"message"}],"returns":[{"type":{"names":["boolean"]},"description":"Did the message publish?"}],"access":"public","meta":{"lineno":285,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":15},"PubSub#broadcast":{"longname":"PubSub#broadcast","name":"broadcast","scope":"instance","kind":"function","description":"Broadcast a message to the given channel(s). Broadcasting causes a message to be read on given channel and all descendant channels. Will not be read on channel subscriptions that are regular-expressions.","memberof":"PubSub","params":[{"type":{"names":["string","Array","set"]},"description":"Channel(s) to publish on (including glob-style patterns).","name":"channel"},{"type":{"names":["*"]},"description":"Message to publish.","name":"message"}],"returns":[{"type":{"names":["boolean"]},"description":"Did the message publish?"}],"access":"public","meta":{"lineno":305,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":16}}