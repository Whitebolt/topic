{"PubSub()":{"longname":"PubSub","name":"PubSub","kind":"constructor","description":"Create a new PubSub instance.","memberof":"PubSub","params":[],"returns":[{"type":{"names":["PubSub"]},"description":"New PubSub instance."}],"order":7},"PubSub":{"longname":"PubSub","name":"PubSub","scope":"global","kind":"class","access":"public","meta":{"lineno":205,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":6},"_makeArrayConvertFunction":{"longname":"_makeArrayConvertFunction","name":"_makeArrayConvertFunction","scope":"global","kind":"function","description":"Convert a non-array to an array using the formula: if =undefined then make empty array, otherwise create new array making the first item the supplied value.","params":[{"type":{"names":["*"]},"description":"Value to convert.","name":"ary"}],"returns":[{"type":{"names":["Array"]},"description":"Converted value."}],"access":"private","meta":{"lineno":33,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":0},"_makeArray":{"longname":"_makeArray","name":"_makeArray","scope":"global","kind":"function","description":"Always return an array. If the provided parameter is an array then return it as-is. If provided param is not an array return param as first item of an array. If a convertFunction is supplied the default non-array to array conversion can be overridden. Function is useful when you always need a value to be array to use array functions (such as map or forEach) on it but cannot guarantee it will be. Will convert 'undefined' to an empty array.","params":[{"type":{"names":["*"]},"description":"Item to return or convert to an array.","name":"ary"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"_makeArrayConvertFunction","description":"Function used to convert to an array if not already one.","name":"convertFunction"}],"returns":[{"type":{"names":["Array"]},"description":"New array or supplied parameter returned."}],"access":"private","meta":{"lineno":64,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":1},"_flattenDeep":{"longname":"_flattenDeep","name":"_flattenDeep","scope":"global","kind":"function","description":"Flatten an array of arrays to a one-dimensional array.","params":[{"type":{"names":["Array"]},"description":"Array to flatten.","name":"ary"}],"returns":[{"type":{"names":["Array"]},"description":"Flattened array."}],"access":"private","meta":{"lineno":75,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":2},"_unique":{"longname":"_unique","name":"_unique","scope":"global","kind":"function","description":"Filter duplicated out of the given array.","params":[{"type":{"names":["Array"]},"description":"Array to filter duplicates from.","name":"ary"}],"returns":[{"type":{"names":["Array"]},"description":"Filtered array."}],"access":"private","meta":{"lineno":86,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":3},"_randomString":{"longname":"_randomString","name":"_randomString","scope":"global","kind":"function","description":"Generate a random string of specified length.","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"The length of string to return.","name":"length"}],"returns":[{"type":{"names":["string"]},"description":"The random string."}],"access":"private","meta":{"lineno":97,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":4},"_createUnsubscribe":{"longname":"_createUnsubscribe","name":"_createUnsubscribe","scope":"global","kind":"function","description":"Create an unsubscribe function for the given channel and id.","params":[{"type":{"names":["Map"]},"description":"PubSub subscriptions map.","name":"ons"},{"type":{"names":["string"]},"description":"Channel to unsubscribe from.","name":"channel"},{"type":{"names":["string"]},"description":"Id of callback to remove.","name":"id"}],"returns":[{"type":{"names":["function"]},"description":"The unsubscribe function."}],"access":"private","meta":{"lineno":112,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":5},"PubSub#publish":{"longname":"PubSub#publish","name":"publish","scope":"instance","kind":"function","description":"Publish data to given channel, firing any subscriptions.","memberof":"PubSub","params":[{"type":{"names":["string","Array"]},"description":"Channel(s) to publish to. If an array then publish to more than one channel.","name":"channel"},{"type":{"names":["*"]},"description":"Data to publish.","name":"data"}],"access":"public","meta":{"lineno":233,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":8},"PubSub#broadcast":{"longname":"PubSub#broadcast","name":"broadcast","scope":"instance","kind":"function","description":"Broadcast data on a given channel, firing any subscriptions. A broadcast causes all child channels to receive the message as well. This is the opposite to publish where parents receive from children rather than children from parents.","memberof":"PubSub","params":[{"type":{"names":["string","Array"]},"description":"Channel(s) to broadcast on. If an array then broadcast to more than one channel.","name":"channel"},{"type":{"names":["*"]},"description":"Data to broadcast.","name":"data"}],"access":"public","meta":{"lineno":255,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":9},"PubSub#subscribe":{"longname":"PubSub#subscribe","name":"subscribe","scope":"instance","kind":"function","description":"Subscribe to a channel or if an array is supplied more than one channel. Fire callback when anything is published on subscribed channels subscribed to.","memberof":"PubSub","params":[{"type":{"names":["string","Array"]},"description":"Channel(s) to subscribe to.","name":"channel"},{"type":{"names":["function"]},"description":"Callback to fire when channel is published to.","name":"callback"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"defaultOptions","description":"Subscription options.","name":"options"}],"access":"public","meta":{"lineno":277,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":10},"PubSub#once":{"longname":"PubSub#once","name":"once","scope":"instance","kind":"function","description":"Subscribe just once to the given channel(s). After first callback, unsubscribe from channel(s).","memberof":"PubSub","params":[{"type":{"names":["string","Array"]},"description":"Channel(s) to subscribe to.","name":"channel"},{"type":{"names":["function"]},"description":"Callback to fire when channel is published to.","name":"callback"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"defaultOptions","description":"Subscription options.","name":"options"}],"access":"public","meta":{"lineno":296,"filename":"index.js","path":"/home/simpo/Projects/topic"},"order":11}}